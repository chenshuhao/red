<?php
namespace Apps\Admin;
use Phalcon\Paginator\Adapter\Model as PaginatorModel;

class IndexController extends BaseController{
	public function onConstruct ()
	{
		parent::onConstruct (); // TODO: Change the autogenerated stub
		$this->view->setVar('username',$this->user['username']);

		if($this->user['type'] == 'user'){
			$this->response->redirect("admin/vlist");
		}

	}

	public function showAction(){

		$this->view->setVar('action','list');

		$userlist = \Admin::find(array(
			'order'=>'time desc'
		));
		$currentPage = $this->params('page')?:0;
		$paginator = new PaginatorModel(
			array(
				"data"  => $userlist,
				"limit" => 15,
				"page"  => $currentPage
			)
		);

		$page = $paginator->getPaginate ();

		foreach ( $page->items as $item ) {
			$data[] = array(
				'username'    => $item->username,
				'time'    => date('Y-m-d H:i:s',$item->time),
				'etime'    => date('Y-m-d H:i:s',$item->etime),
				'stime'    => date('Y-m-d H:i:s',$item->stime),
				'last_time'    => date('Y-m-d H:i:s',$item->last_time),
				'status'    => $item->status?'正常':'禁用',
				'type'    => $item->type == 'A' ? '管理员': '平台用户',
				'id'    => $item->id,
				'gzh'    => $this->getMpType($item->id)
			);
		}


		$listData = array(
			'data'        => $data,
			'current'     => $page->current,
			'next'        => $page->next,
			'total_items' => $page->total_items,
			'total_pages' => $page->total_pages
		);

		$this->view->setVar('list',$listData);

		$this->viewPick();
	}

	public function addAction(){
		$this->view->setVar('action','add');


		if($this->request->isPost()){
			$data = array(
				'username'=>$this->params('username'),
				'password'=>md5($this->params('password')),
				'type'=>$this->params('type'),
				'stime'=>strtotime($this->params('stime')),
				'etime'=>strtotime($this->params('etime')),
				'time'=>time(),
				'status'=>1,
				'last_time'=>time(),
			);

			if((new \Admin()) -> create($data)){
				$this->response->redirect("/admin/tiao?title=创建成功&url=/admin/index")->sendHeaders();
			}else{
				$this->response->redirect("/admin/tiao?title=创建失败&url=/admin/index")->sendHeaders();
			}
		}else{

			$this->viewPick();
		}
	}

	public function getMpType($id){
		$config = \Config::findFirst(array(
			'conditions'=>'uid=:uid:',
			'bind'=>array(
				'uid'=>$id
			)
		));

		if($config){
			return $config->type?'认证服务号':'其他';
		}else{
			return '未配置';
		}
	}


	public function votesListAction(){

		$uid = $this->params('uid');


		$list = \Vote::find(array(
			'conditions'=>'uid=:uid:',
			'bind'=>array(
				'uid'=>$uid
			)
		));

		foreach($list as $item){
			$data[] = array(
				'id'=>$item->id,
				'name'    => $item->name,
				'num'    => $item->num,
				'd_status'    => $item->d_status,
				'fanwei'    => $item->fanwei,
				'mfanwei'    => toYuan($item->smoeny) .' - '. toYuan($item->emoney),
				'status'    => $item->status,
				'sd'    => $item->sd.' - '.$item->ed,
				'money'    => toYuan($item->money),
				'stime'    => date('Y-m-d H:i:s',$item->stime).'-'.date('Y-m-d H:i:s',$item->etime),
				'time'    => date('Y-m-d H:i:s',$item->time),
				'lingrenshu'    => $this->renshu($item->id),
				'lingjine'    => toYuan($this->hejiprice($item->id)),
			);
		}

		$this->view->list = $data;

		$this->viewPick('admin');

	}


	public function renshu($vid){
		$num = \Vlog::count(array(
			'conditions' => 'vid=:vid: and status=:status: ',
			'bind'       => array(
				'vid' => $vid,
				'status' => 1
			),
			"group" => "openid",
		));

		return is_numeric($num->count())?$num->count():0;
	}


	public function hejiprice($vid){
		$userlingquSUM = \Vlog::sum (
			array(
				"column"     => "price",
				'conditions' => 'vid=:vid: and status=:status:',
				'bind'       => array(
					'vid' => $vid,
					'status' => 1
				)
			)
		);

		return $userlingquSUM?:0;
	}

	public function sheheokAction(){
		$id = $this->params('id');

		$voteinfo = \Vote::findFirst(array(
			'conditions'=>'id=:id:',
			'bind'=>array(
				'id'=>$id
			)
		));

		if($voteinfo){
			$voteinfo->d_status = $voteinfo->d_status?0:1;
			if($voteinfo->save()){
				renderJSON(0,'ok');
				return;
			}
		}

		renderJSON(-1,'fail');

	}


}